"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/projects/page",{

/***/ "(app-pages-browser)/./components/projects-grid.tsx":
/*!**************************************!*\
  !*** ./components/projects-grid.tsx ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ProjectsGrid)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_intersection_observer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-intersection-observer */ \"(app-pages-browser)/./node_modules/react-intersection-observer/dist/index.mjs\");\n/* harmony import */ var _project_card_3d__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./project-card-3d */ \"(app-pages-browser)/./components/project-card-3d.tsx\");\n/* harmony import */ var _components_section_reveal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/section-reveal */ \"(app-pages-browser)/./components/section-reveal.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\nconst projects = [\n    {\n        id: 1,\n        title: \"News Classification with BiLSTM\",\n        description: \"Implemented text classification using Bidirectional LSTM with pre-trained GloVe embeddings, achieving 91% accuracy on AG News dataset and 57% on the more complex 20 Newsgroups dataset with 20 categories.\",\n        tags: [\n            \"Python\",\n            \"Deep Learning\",\n            \"NLP\",\n            \"BiLSTM\",\n            \"GloVe\",\n            \"Text Classification\"\n        ],\n        image: \"/News-Classification-using-NLP.webp?height=600&width=1200\",\n        github: \"https://github.com/SaatvikP/News_Classification\",\n        demo: \"https://github.com/SaatvikP/News_Classification\",\n        slug: \"news-classification\",\n        period: \"Jan 2024 - Mar 2024\"\n    },\n    {\n        id: 2,\n        title: \"AdSculptAI\",\n        description: \"Developed an AI-powered ad generation platform that creates personalized video ads in real-time based on user preferences, integrating OpenAI for scripts, ElevenLabs for voiceovers, and D-ID for lip-synced videos.\",\n        tags: [\n            \"Python\",\n            \"React\",\n            \"TypeScript\",\n            \"OpenAI API\",\n            \"ElevenLabs API\",\n            \"D-ID API\",\n            \"Cloudflare\"\n        ],\n        image: \"/NRP-Privacy_Matters_Personalized_Advertising_and_Privacy_Arent_at_Odds_banner_FINAL.jpg.webp?height=600&width=1200\",\n        github: \"https://github.com/SaatvikP/AdSculptAI\",\n        demo: \"https://github.com/SaatvikP/AdSculptAI\",\n        slug: \"adsculpt-ai\",\n        period: \"Nov 2023 - Feb 2024\"\n    },\n    {\n        id: 3,\n        title: \"POS Tagging with Word Embeddings\",\n        description: \"Built Part-of-Speech tagging models using both traditional ML (Logistic Regression, SVM) and deep learning (BiLSTM) approaches. The BiLSTM model with GloVe embeddings achieved 94.78% accuracy, significantly outperforming traditional methods.\",\n        tags: [\n            \"Python\",\n            \"NLP\",\n            \"BiLSTM\",\n            \"GloVe\",\n            \"Machine Learning\",\n            \"SVM\",\n            \"TF-IDF\"\n        ],\n        image: \"/POS-Tagging-800x400.jpg?height=600&width=1200\",\n        github: \"https://github.com/SaatvikP/POS_Tagging_using_Word_Embedding\",\n        demo: \"https://github.com/SaatvikP/POS_Tagging_using_Word_Embedding\",\n        slug: \"pos-tagging\",\n        period: \"Oct 2023 - Dec 2023\"\n    },\n    {\n        id: 4,\n        title: \"Course PAiLOT\",\n        description: \"Created a personalized academic planning platform that analyzes 10,000+ courses across 200+ majors to deliver tailored recommendations based on student preferences, improving course selection accuracy by 40%.\",\n        tags: [\n            \"Next.js\",\n            \"TypeScript\",\n            \"Firebase\",\n            \"Python\",\n            \"Web Scraping\",\n            \"BeautifulSoup\",\n            \"OpenAI API\"\n        ],\n        image: \"/gallery.jpg?height=600&width=1200\",\n        github: \"https://github.com/SaatvikP/COURSE-PAILOT\",\n        demo: \"https://devpost.com/software/course-pailot\",\n        slug: \"course-pailot\",\n        period: \"Oct 2023 - Oct 2023\"\n    },\n    {\n        id: 5,\n        title: \"Pet Store Web Application\",\n        description: \"Built a full-stack e-commerce app with secure authentication, cart management, and responsive design. Improved page load times by 20% through efficient content rendering using Thymeleaf templates.\",\n        tags: [\n            \"Spring Boot\",\n            \"Java\",\n            \"Thymeleaf\",\n            \"HTML/CSS\",\n            \"Spring Security\"\n        ],\n        image: \"/Pet_Store_Web_App.png?height=600&width=1200\",\n        github: \"https://github.com/SaatvikP/Pet-Store-Web-Application\",\n        demo: \"https://github.com/SaatvikP/Pet-Store-Web-Application\",\n        slug: \"pet-store\",\n        period: \"Aug 2023 - Dec 2023\"\n    },\n    {\n        id: 6,\n        title: \"Cross Impact OFI Analysis\",\n        description: \"Analyzed cross-impact dynamics of Order Flow Imbalance (OFI) in equity markets, integrating multi-level OFI metrics and applying dimensionality reduction to evaluate their predictive power for price changes across various stocks.\",\n        tags: [\n            \"Python\",\n            \"Data Analysis\",\n            \"Financial Markets\",\n            \"PCA\",\n            \"Regression Analysis\",\n            \"Visualization\"\n        ],\n        image: \"/cross_impact.webp?height=600&width=1200\",\n        github: \"https://github.com/SaatvikP/Cross_Impact_OFI\",\n        demo: \"https://github.com/SaatvikP/Cross_Impact_OFI\",\n        slug: \"cross-impact-ofi\",\n        period: \"Jun 2023 - Aug 2023\"\n    },\n    {\n        id: 7,\n        title: \"Parkinson's Disease Detection from MRI\",\n        description: \"Compared 3D CNNs, SVMs, and Random Forests for classifying MRI scans into PD, Control, SWEDD, and Prodromal groups. Random Forest achieved the highest accuracy (65.9%) for multiclass classification, while SVM performed best (76.4%) for binary classification.\",\n        tags: [\n            \"Python\",\n            \"Machine Learning\",\n            \"Medical Imaging\",\n            \"CNN\",\n            \"SVM\",\n            \"Random Forest\",\n            \"MRI Analysis\"\n        ],\n        image: \"/Parkinson's_Poster.jpg?height=600&width=1200\",\n        github: \"https://sites.psu.edu/mcreu/2024/07/23/comparative-analysis-of-machine-learning-algorithms-for-parkinsons-disease-detection-from-mri-scans/\",\n        demo: \"https://sites.psu.edu/mcreu/2024/07/23/comparative-analysis-of-machine-learning-algorithms-for-parkinsons-disease-detection-from-mri-scans/\",\n        slug: \"parkinsons-detection\",\n        period: \"May 2023 - Jul 2023\"\n    },\n    {\n        id: 8,\n        title: \"Trustworthy Neural Networks\",\n        description: \"Developed an adaptive learning algorithm to adjust rates based on rejects, improving neural network reliability by 90% for safety-critical applications. Tested on breast cancer datasets, synthetic data, and MNIST, achieving a 10% accuracy improvement.\",\n        tags: [\n            \"Python\",\n            \"Deep Learning\",\n            \"Neural Networks\",\n            \"Adaptive Learning\",\n            \"TensorFlow\",\n            \"Keras\"\n        ],\n        image: \"/Neural_Network_Poster.png?height=600&width=1200\",\n        github: \"https://sites.psu.edu/mcreu/2023/07/26/improvement-and-development-of-trustworthy-neural-networks-to-improve-confidence-in-the-prediction-results/\",\n        demo: \"https://sites.psu.edu/mcreu/2023/07/26/improvement-and-development-of-trustworthy-neural-networks-to-improve-confidence-in-the-prediction-results/\",\n        slug: \"trustworthy-neural-networks\",\n        period: \"May 2023 - Jul 2023\"\n    },\n    {\n        id: 9,\n        title: \"In-Pipe Inspection Robot\",\n        description: \"Designed and developed a robotic system for inspecting pipelines, capable of navigating through various pipe diameters and detecting structural issues. Awarded Indian Design Patent: 360985-001.\",\n        tags: [\n            \"Robotics\",\n            \"Computer Vision\",\n            \"Embedded Systems\",\n            \"IoT\",\n            \"Patent\"\n        ],\n        image: \"/In-Pipe.png?height=600&width=1200\",\n        github: \"#\",\n        demo: \"#\",\n        slug: \"pipe-inspection-robot\",\n        period: \"2020 - 2021\"\n    },\n    {\n        id: 10,\n        title: \"Senior e-Bike\",\n        description: \"Designed an electric bike specifically for senior citizens with enhanced safety features and ergonomic design. Awarded Indian Design Patent (Number: 344685-001).\",\n        tags: [\n            \"Product Design\",\n            \"Electrical Engineering\",\n            \"Patent\",\n            \"Ergonomics\"\n        ],\n        image: \"/images.jpeg?height=600&width=1200\",\n        github: \"#\",\n        demo: \"#\",\n        slug: \"senior-ebike\",\n        period: \"2019 - 2020\"\n    },\n    {\n        id: 11,\n        title: \"Automatic Public Ration Dispensing System\",\n        description: \"Developed an automated system for public ration distribution to improve efficiency and reduce fraud. Received Indian Copyright Patent (Number: SW - 14713/2021).\",\n        tags: [\n            \"Automation\",\n            \"IoT\",\n            \"Software Development\",\n            \"Patent\"\n        ],\n        image: \"/Ration.jpg?height=600&width=1200\",\n        github: \"#\",\n        demo: \"#\",\n        slug: \"ration-system\",\n        period: \"2020 - 2021\"\n    },\n    {\n        id: 12,\n        title: \"Cats vs. Dogs Classifier\",\n        description: \"Applied CNNs and deep learning models for accurate classification of Cats vs. Dogs, achieving 92% accuracy. Implemented using TensorFlow and Keras with data augmentation techniques.\",\n        tags: [\n            \"Deep Learning\",\n            \"CNNs\",\n            \"TensorFlow\",\n            \"Image Classification\"\n        ],\n        image: \"/images.png?height=600&width=1200\",\n        github: \"#\",\n        demo: \"#\",\n        slug: \"cats-dogs-classifier\",\n        period: \"Oct 2020\"\n    },\n    {\n        id: 13,\n        title: \"Voice-Activated Android App\",\n        description: \"Built a voice-activated Android application for display panel printing, integrating Bluetooth communication and Arduino-based hardware controls. Improved operational efficiency by automating manual processes and reducing errors.\",\n        tags: [\n            \"Android\",\n            \"Kotlin\",\n            \"Bluetooth\",\n            \"Voice Recognition\",\n            \"Arduino\"\n        ],\n        image: \"/HeroHomepage_2880x1200.width-1200.format-webp.webp?height=600&width=1200\",\n        github: \"#\",\n        demo: \"#\",\n        slug: \"voice-android-app\",\n        period: \"Apr 2021 - Jun 2021\"\n    },\n    {\n        id: 14,\n        title: \"AI-Powered Fire and Smoke Detection\",\n        description: \"Developed an AI-powered image processing system using YOLOv5 to detect fire, smoke, and face masks in real-time. Integrated OpenCV for preprocessing and optimized the model for low-latency deployment in safety-critical applications.\",\n        tags: [\n            \"Computer Vision\",\n            \"YOLOv5\",\n            \"OpenCV\",\n            \"Safety Systems\",\n            \"Real-Time Detection\"\n        ],\n        image: \"/fire_smoke_detection.jpg?height=600&width=1200\",\n        github: \"#\",\n        demo: \"#\",\n        slug: \"fire-smoke-detection\",\n        period: \"Jun 2022 - Aug 2022\"\n    }\n];\nfunction ProjectsGrid() {\n    _s();\n    const [ref, inView] = (0,react_intersection_observer__WEBPACK_IMPORTED_MODULE_3__.useInView)({\n        triggerOnce: true,\n        threshold: 0.1\n    });\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: ref,\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\",\n        children: projects.map((project, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_section_reveal__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                delay: index * 0.1,\n                direction: \"up\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_project_card_3d__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n                    project: project\n                }, void 0, false, {\n                    fileName: \"/Users/saatvikpradhan/Documents/GitHub/Saatvik_Pradhan_Portfolio/components/projects-grid.tsx\",\n                    lineNumber: 191,\n                    columnNumber: 11\n                }, this)\n            }, \"project-\".concat(project.id, \"-\").concat(project.slug, \"-\").concat(index), false, {\n                fileName: \"/Users/saatvikpradhan/Documents/GitHub/Saatvik_Pradhan_Portfolio/components/projects-grid.tsx\",\n                lineNumber: 190,\n                columnNumber: 9\n            }, this))\n    }, void 0, false, {\n        fileName: \"/Users/saatvikpradhan/Documents/GitHub/Saatvik_Pradhan_Portfolio/components/projects-grid.tsx\",\n        lineNumber: 188,\n        columnNumber: 5\n    }, this);\n}\n_s(ProjectsGrid, \"GpcLnEGLCRT/LcXgsVwPMCbjDPg=\", false, function() {\n    return [\n        react_intersection_observer__WEBPACK_IMPORTED_MODULE_3__.useInView\n    ];\n});\n_c = ProjectsGrid;\nvar _c;\n$RefreshReg$(_c, \"ProjectsGrid\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/projects-grid.tsx\n"));

/***/ })

});